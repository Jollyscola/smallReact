{"version":3,"sources":["components/User.js","components/Users.js","components/Info.js","App.js","reportWebVitals.js","index.js"],"names":["User","user","handleClose","className","scope","id","username","email","phone","website","onClick","Users","props","useState","show","setShow","selectedUser","setSelectedUser","data","map","name","console","log","showInfo","handleDeleteUser","API","setData","useEffect","fetch","then","res","json","newUser","filter","App","Info","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"4OAwCeA,EApCF,SAAC,GAAyB,IAAxBC,EAAuB,EAAvBA,KAAMC,EAAiB,EAAjBA,YAEjB,OACI,qBAAKC,UAAU,sBAAf,SACA,0BAASA,UAAU,aAAnB,UACE,qBAAKA,UAAU,MAAf,SACE,wBAAOA,UAAU,QAAjB,UACE,gCACE,+BACE,oBAAIC,MAAM,MAAV,gBACA,oBAAIA,MAAM,MAAV,sBACA,oBAAIA,MAAM,MAAV,mBACA,oBAAIA,MAAM,MAAV,mBACA,oBAAIA,MAAM,MAAV,0BAGJ,gCACE,+BACE,6BAAKH,EAAKI,KACV,6BAAKJ,EAAKK,WACV,6BAAKL,EAAKM,QACV,6BAAKN,EAAKO,QACV,6BAAKP,EAAKQ,oBAKlB,qBAAKN,UAAU,SAAf,SACA,wBAASO,QAASR,EAAlB,2B,MCGKS,MA/Bf,SAAeC,GAAO,IAAD,EACMC,oBAAS,GADf,mBACVC,EADU,KACLC,EADK,OAEuBF,mBAAS,IAFhC,mBAEVG,EAFU,KAEIC,EAFJ,KAajB,OACI,gCAECL,EAAMM,KAAKC,KAAI,SAAClB,GAEL,OACJ,gCACA,6BAAKA,EAAKmB,OACV,4BAAInB,EAAKK,WACT,wBAAQI,QAAS,kBAnBZ,SAACT,GACdgB,EAAgBhB,GAChBoB,QAAQC,MACRP,GAAQ,GAgBuBQ,CAAStB,IAAhC,2BACA,wBAAQS,QAAS,kBAAME,EAAMY,iBAAiBvB,EAAKI,KAAnD,sBAJUJ,EAAKI,OAOhBS,GAAQ,cAAC,EAAD,CAAMb,KAAMe,EAAcd,YAjB3B,WACda,GAAQ,UCqBDU,MAhCf,WAAe,IAAD,EAEaZ,qBAFb,mBAEHK,EAFG,KAEEQ,EAFF,KAgBd,OAZIC,qBAAU,WACNC,MAAM,8CACLC,MAAK,SAACC,GAAD,OAASA,EAAIC,UAClBF,MAAK,SAACX,GAAD,OAAUQ,EAAQR,QAC1B,IAQHA,EAEK,8BACK,cAAC,EAAD,CAAOA,KAAMA,EAAMM,iBATH,SAACnB,GACtB,IAAM2B,EAAUd,EAAKe,QAAO,SAAChC,GAAD,OAAUA,EAAKI,KAAOA,KACjDqB,EAAQM,QAYT,8BAAK,+CChBEE,MARf,WACE,OACE,8BACA,cAACC,EAAD,OCMWC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBT,MAAK,YAAkD,IAA/CU,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.0b99dd62.chunk.js","sourcesContent":["\r\n\r\n\r\n\r\nconst User = ({user, handleClose}) => {\r\n\r\n    return(\r\n        <div className=\"modal display-block\">\r\n        <section className=\"modal-main\">\r\n          <div className=\"App\">\r\n            <table className=\"table\">\r\n              <thead>\r\n                <tr>\r\n                  <th scope=\"col\">Id</th>\r\n                  <th scope=\"col\">username</th>\r\n                  <th scope=\"col\">email</th>\r\n                  <th scope=\"col\">phone</th>\r\n                  <th scope=\"col\">website</th>\r\n                </tr>\r\n              </thead>\r\n              <tbody>\r\n                <tr>\r\n                  <td>{user.id}</td>\r\n                  <td>{user.username}</td>\r\n                  <td>{user.email}</td>\r\n                  <td>{user.phone}</td>\r\n                  <td>{user.website}</td>\r\n                </tr>\r\n              </tbody>\r\n            </table>\r\n          </div>\r\n          <div className=\"middle\">\r\n          <button  onClick={handleClose}>close</button>\r\n          </div>\r\n        </section>\r\n      </div>\r\n    )\r\n}\r\n\r\n\r\nexport default User","import {useState } from 'react';\r\nimport User from './User'\r\nimport \"../styles.css\";\r\n//import \"bootstrap/dist/css/bootstrap.min.css\";\r\nfunction Users(props){\r\n    const [show,setShow] = useState(false)\r\n    const [selectedUser, setSelectedUser] = useState({});\r\n    const showInfo = (user) => {\r\n        setSelectedUser(user)\r\n        console.log()\r\n        setShow(true);\r\n    }\r\n\r\n    const hideModal = () => {\r\n        setShow(false);\r\n      };\r\n    \r\n    return(\r\n        <div>\r\n      \r\n        {props.data.map((user) => {\r\n            // console.log(user)\r\n                    return(\r\n                <div key={user.id}>\r\n                <h1>{user.name}</h1>\r\n                <p>{user.username}</p>\r\n                <button onClick={() => showInfo(user)}> More details</button>\r\n                <button onClick={() => props.handleDeleteUser(user.id)}>Delete</button>\r\n            </div> \r\n            )})}\r\n              {show && <User user={selectedUser} handleClose={hideModal}/>}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Users","\r\nimport { useEffect, useState } from 'react';\r\nimport Users from './Users';\r\nfunction API(){\r\n\r\n    const [data,setData] = useState()\r\n\r\n    useEffect(() => {\r\n        fetch(\"https://jsonplaceholder.typicode.com/users\")\r\n        .then((res) => res.json())\r\n        .then((data) => setData(data))\r\n    },[])\r\n\r\n    const handleDeleteUser = (id) => {\r\n        const newUser = data.filter((user) => user.id !== id)\r\n         setData(newUser)\r\n       \r\n   }\r\n   \r\nif(data){\r\n    return(\r\n        <div>\r\n             <Users data={data} handleDeleteUser={handleDeleteUser}/>\r\n        </div>\r\n    )\r\n}else{\r\n    return(\r\n        <div><h1>Waiting...</h1></div>\r\n    )\r\n  }\r\n}\r\n\r\n\r\n\r\n\r\nexport default API","\nimport './App.css';\nimport Info from './components/Info'\nfunction App() {\n  return (\n    <div>\n    <Info/>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}